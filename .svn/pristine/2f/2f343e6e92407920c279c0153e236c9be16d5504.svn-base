/**
 * Created by bizic on 28/8/2016.
 */
(function () {
    'use strict';

    angular.module('PDMA.PREV_REPORT').controller('PrevReportController', PrevReportController);

    PrevReportController.$inject = [
        '$rootScope',
        '$scope',
        '$state',
        'blockUI',
        '$timeout',
        'settings',
        '$uibModal',
        'toastr',
        'Utilities',
        'PrevReportService',
        'focusFlatPick',
        'openSelectBox'
    ];
    
    function PrevReportController ($rootScope, $scope, $state, blockUI, $timeout,settings, modal, toastr, utils, service,focusFlatPick,openSelectBox) {
        $scope.$on('$viewContentLoaded', function() {
            // initialize core components
            App.initAjax();
        });

        // set sidebar closed and body solid layout mode
        $rootScope.settings.layout.pageContentWhite = true;
        $rootScope.settings.layout.pageBodySolid = false;
        $rootScope.settings.layout.pageSidebarClosed = true;

        // wait for current user object
        blockUI.start();
        $scope.$watch('currentUser.loaded', function (newVal, old) {
            if (!newVal) {
                return;
            }

            blockUI.stop();

            // todo if necessary check if the current user is allowed to access this page
        });

        let vm = this;

        vm.report={orgIds:[]};

        vm.listReport=[
            {id:1, name:"Báo cáo SNS"},
            // {id:2, name:"Báo cáo TVXN HIV"},
            {id:3, name:"Báo cáo Tiếp cận cộng đồng"},
            // {id:4, name:"Báo cáo Thông báo XN BT/BC"},
            // {id:5, name:"Báo cáo Xét nghiệm sàng lọc giang mai"},
            {id:6, name:"Báo cáo Tự xét nghiệm"},
        ];
        vm.orgsWritable=[];
        $scope.$watch('assignedOrgs.initialized', function (newVal, oldVal) {
            if (newVal == true) {
                vm.orgsWritable = $scope.assignedOrgs.writable;
                // if (vm.orgsWritable && vm.orgsWritable.length >= 1 && !vm.report.org) {
                //     vm.currentOrg = vm.orgsWritable[0];
                //     vm.report.org=vm.orgsWritable[0];
                // }
            }
        });

        vm.exportReport = function () {
            let successHandler = function (data, status, headers, config) {
                blockUI.stop();

                headers = headers();

                let filename = headers['x-filename'];
                let contentType = headers['content-type'];

                let linkElement = document.createElement('a');
                try {
                    let blob = new Blob([data], {type: contentType});
                    let url = window.URL.createObjectURL(blob);

                    linkElement.setAttribute('href', url);
                    linkElement.setAttribute("download", filename);

                    let clickEvent = new MouseEvent("click", {
                        "view": window,
                        "bubbles": true,
                        "cancelable": false
                    });
                    linkElement.dispatchEvent(clickEvent);
                } catch (ex) {
                    console.log(ex);
                }
            };
            if(!vm.report.type){
                toastr.warning('Chưa chọn kiểu báo cáo',"Thông báo");
                openSelectBox('vm.report.type');
                return;
            }
            if(vm.report.orgIds && vm.report.orgIds.length==0){
                toastr.warning('Chưa chọn cơ sở báo cáo',"Thông báo");
                openSelectBox('vm.report.orgIds');
                return;
            }
            if(!vm.report.fromDate){
                toastr.warning('Chưa chọn ngày bắt đầu',"Thông báo");
                focusFlatPick('vm.report.fromDate');
                return;
            }
            if(!vm.report.toDate){
                toastr.warning('Chưa chọn ngày kết thúc',"Thông báo");
                focusFlatPick('vm.report.toDate');
                return;
            }
            if(vm.report.toDate<vm.report.fromDate){
                toastr.warning('Ngày bắt đầu không thế lớn hơn ngày kết thúc',"Thông báo");
                focusFlatPick('vm.report.toDate');
                return;
            }
            blockUI.start();
            if(vm.report.type && vm.report.type==1){
                service.exportReportSNS(vm.report)
                .success(successHandler)
                .error(function () {
                blockUI.stop();
            });
            }
            // if(vm.report.type && vm.report.type==2){
            //     service.exportReportHTS(vm.report)
            //     .success(successHandler)
            //     .error(function () {
            //     blockUI.stop();
            // });
            // }
            if(vm.report.type && vm.report.type==3){
                service.exportReportPE(vm.report)
                .success(successHandler)
                .error(function () {
                blockUI.stop();
            });
            }
            // if(vm.report.type && vm.report.type==4){
            //     service.exportReportPNS(vm.report)
            //     .success(successHandler)
            //     .error(function () {
            //     blockUI.stop();
            // });
            // }
            // if(vm.report.type && vm.report.type==5){
            //     service.exportReportSTI(vm.report)
            //     .success(successHandler)
            //     .error(function () {
            //     blockUI.stop();
            // });
            //}
            if(vm.report.type && vm.report.type==6){
                service.exportReportSelfTest(vm.report)
                .success(successHandler)
                .error(function () {
                blockUI.stop();
            });
            }
            
        };

        let datePickerOptions = {
            altFormat: 'd/m/Y',
            altInput: true,
            dateFormat: 'Y-m-dTH:i:S',
            enableTime: false,
            placeholder: 'Chọn ngày..',
            plugins: [new scrollPlugin({})],
            weekNumbers: true,
            shorthandCurrentMonth: false,
            locale: 'vn',
            position: 'auto',
            allowInput: true
        };

        // Report start date
        vm.datepicker1 = {
            fpItem: null,
            dateOpts: $.extend({
                onChange: [function () {
                    const d = this.selectedDates[0];
                    if (_.isDate(d)) {
                        const m = moment(d, 'YYYY-MM-DD');
                        vm.report.fromDate = m.add(7, 'hours').toDate();
                    }
                }],
            }, datePickerOptions),
            datePostSetup: function (fpItem) {
                vm.datepicker1.fpItem = fpItem;
                if (vm.report.fromDate ) {
                    fpItem.setDate(moment(vm.report.fromDate).toDate());
                }
            },
            clear: function () {
                if (vm.datepicker1.fpItem) {
                    vm.datepicker1.fpItem.clear();
                    vm.report.fromDate = null;
                }
            }
        };

        // Report end date
        vm.datepicker2 = {
            fpItem: null,
            dateOpts: $.extend({
                onChange: [function () {
                    const d = this.selectedDates[0];
                    if (_.isDate(d)) {
                        const m = moment(d, 'YYYY-MM-DD');
                        vm.report.toDate = m.add(7, 'hours').toDate();
                    }
                }],
            }, datePickerOptions),
            datePostSetup: function (fpItem) {
                vm.datepicker2.fpItem = fpItem;
                if (vm.report.toDate) {
                    fpItem.setDate(moment(vm.report.toDate).toDate());
                }
            },
            clear: function () {
                if (vm.datepicker2.fpItem) {
                    vm.datepicker2.fpItem.clear();
                    vm.report.toDate = null;
                }
            }
        };
    }

})();
